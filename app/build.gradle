/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
  dockerJavaVersion = "3.3.4"
  vertxVersion = "4.5.1"
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation "org.junit.jupiter:junit-jupiter:5.9.3"

    implementation platform("io.vertx:vertx-stack-depchain:$vertxVersion")
    implementation "io.vertx:vertx-core"
    implementation "io.vertx:vertx-web"
    implementation "io.vertx:vertx-config"

    implementation "com.github.docker-java:docker-java:3.3.4"
    implementation "com.github.docker-java:docker-java-transport-httpclient5:3.3.4"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'io.yaade.vm.docker.manager.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// TODO: not working yet
jar {
    manifest {
        attributes "Main-Class": "io.yaade.vm.docker.manager.App"
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
